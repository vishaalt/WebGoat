name: "Build"
on:
  pull_request:
    paths-ignore:
      - '.txt'
      - '*.MD'
      - '*.md'
      - 'LICENSE'
      - 'docs/**'
  push:
    branches:
      - master
      - develop
    tags-ignore:
      - '*'
    paths-ignore:
      - '.txt'
      - '*.MD'
      - '*.md'
      - 'LICENSE'
      - 'docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn clean install

  notify-slack:
    if: github.event_name == 'push' && (success() || failure())
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: "Slack workflow notification"
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
  test:
    runs
    steps:
   # Step 1: Checkout the repository and provide your AWS credentials
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

   # Step 2: Add CodeGuru Reviewer Action
    - name: AWS CodeGuru Reviewer Scanner
      uses: aws-actions/codeguru-reviewer@v1
      with:
        build_root: target # build artifact(s) directory
        s3_bucket: codeguru-reviewer-my-bucket  # S3 Bucket with "codeguru-reviewer-*" prefix
    
    # Step 3: Upload results into GitHub
    - name: Upload review result
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: codeguru-results.sarif.json
          
